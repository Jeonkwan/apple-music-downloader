name: Go Release

on:
  push:
    branches:
      - 'main'
      - 'master'
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'
    - name: Build
      run: go build -o main.exe -v ./main.go
    - name: Package artifact
      shell: pwsh
      run: |
        mkdir build_output
        cp agent.js build_output/
        cp agent-arm64.js build_output/
        cp config.yaml build_output/
        cp README.md build_output/
        cp main.exe build_output/
        Compress-Archive -Path build_output/* -DestinationPath apple-music-downloader_windows-x86_64.zip
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: apple-music-downloader_windows-x86_64
        path: apple-music-downloader_windows-x86_64.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'
    - name: Build
      run: go build -o main -v ./main.go
    - name: Package artifact
      run: |
        mkdir build_output
        cp agent.js build_output/
        cp agent-arm64.js build_output/
        cp config.yaml build_output/
        cp README.md build_output/
        cp main build_output/
        zip -j apple-music-downloader_linux-x86_64.zip build_output/*
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: apple-music-downloader_linux-x86_64
        path: apple-music-downloader_linux-x86_64.zip

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'
    - name: Build
      env:
        GOOS: linux
        GOARCH: arm64
      run: go build -o main -v ./main.go
    - name: Package artifact
      run: |
        mkdir build_output
        cp agent.js build_output/
        cp agent-arm64.js build_output/
        cp config.yaml build_output/
        cp README.md build_output/
        cp main build_output/
        zip -j apple-music-downloader_linux-arm64.zip build_output/*
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: apple-music-downloader_linux-arm64
        path: apple-music-downloader_linux-arm64.zip

  build-macos-apple-silicon:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'
    - name: Build
      run: go build -o main -v ./main.go
    - name: Package artifact
      run: |
        mkdir build_output
        cp agent.js build_output/
        cp agent-arm64.js build_output/
        cp config.yaml build_output/
        cp README.md build_output/
        cp main build_output/
        zip -j apple-music-downloader_macos-apple-silicon.zip build_output/*
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: apple-music-downloader_macos-apple-silicon
        path: apple-music-downloader_macos-apple-silicon.zip

  build-macos-intel:
    runs-on: macos-15-intel
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'
    - name: Build
      run: go build -o main -v ./main.go
    - name: Package artifact
      run: |
        mkdir build_output
        cp agent.js build_output/
        cp agent-arm64.js build_output/
        cp config.yaml build_output/
        cp README.md build_output/
        cp main build_output/
        zip -j apple-music-downloader_macos-intel-x86_64.zip build_output/*
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: apple-music-downloader_macos-intel-x86_64
        path: apple-music-downloader_macos-intel-x86_64.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux, build-linux-arm64, build-macos-apple-silicon, build-macos-intel]
    permissions:
      contents: write
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/*/*.zip
        draft: true