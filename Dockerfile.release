FROM golang:1.23.1 as builder

WORKDIR /src
COPY . .

# Build for the target architecture
ARG TARGETARCH
RUN CGO_ENABLED=0 GOOS=linux GOARCH=$TARGETARCH go build -o main ./main.go

FROM ubuntu:24.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install required packages
RUN apt-get update && apt-get install -y \
    gpac \
    ffmpeg \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create and set working directory
WORKDIR /app

# Copy files from builder
COPY --from=builder /src/main /app/main
COPY --from=builder /src/agent.js /app/agent.js
COPY --from=builder /src/agent-arm64.js /app/agent-arm64.js
COPY --from=builder /src/config.yaml /app/config.yaml
COPY --from=builder /src/README.md /app/README.md

# Create necessary directories
RUN mkdir -p /app/output_alac \
    /app/output_aac \
    /app/output_atmos \
    /app/converted_output_alac \
    /app/converted_output_aac \
    /app/converted_output_atmos

# Make the binary executable
RUN chmod +x /app/main

# Set entrypoint to the binary
ENTRYPOINT ["/app/main"]